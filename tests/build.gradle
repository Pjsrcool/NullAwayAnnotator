/*
 * MIT License
 *
 * Copyright (c) 2020 Nima Karimipour
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

buildscript {
    repositories {
        gradlePluginPortal()
    }
    dependencies {
        classpath "net.ltgt.gradle:gradle-errorprone-plugin:0.6"
    }
}

plugins {
    id "com.github.sherter.google-java-format" version "0.8"
}

allprojects {

    apply plugin: 'net.ltgt.errorprone'
    apply plugin: 'java'

    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        annotationProcessor "com.uber.nullaway:nullaway:0.9.6"
        annotationProcessor "edu.ucr.cs.riple.nullawayannotator:css:1.2.3-LOCAL"

        compileOnly "com.google.code.findbugs:jsr305:3.0.2"
        errorprone 'com.google.errorprone:error_prone_core:2.10.0'
        errorproneJavac "com.google.errorprone:javac:9+181-r4173-1"
    }

    tasks.withType(JavaCompile) {
        if (!name.toLowerCase().contains("tests")) {
            options.errorprone.errorproneArgs += ["-XepDisableAllChecks",
                                                  "-Xep:NullAway:ERROR",
                                                  "-XepOpt:NullAway:AnnotatedPackages=tests",
                                                  "-XepOpt:NullAway:SerializeFixMetadata=true",
                                                  "-XepOpt:NullAway:FixSerializationConfigPath=/tmp/NullAwayFix/config.xml",
                                                  "-XepOpt:NullAway:CustomNullableAnnotation=com.badlogic.gdx.utils.Null",
                                                  "-Xep:CSS:ERROR",
                                                  "-XepOpt:CSS:ConfigPath=/tmp/NullAwayFix/css.xml",
                                                  "-XepDisableAllWarnings"]
            options.compilerArgs << "-Xmaxerrs" << "100000"
        }
    }
}
